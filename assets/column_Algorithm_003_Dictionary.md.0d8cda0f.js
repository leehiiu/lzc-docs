import{_ as s,o as a,c as n,N as l}from"./chunks/framework.92ea44c2.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"column/Algorithm/003_Dictionary.md"}'),o={name:"column/Algorithm/003_Dictionary.md"},p=l(`<p>在前端开发中，JavaScript 语言提供了 Set 和 Map 这两种数据结构，它们在处理数据时非常有用，尤其是在处理数组去重、对象映射等场景。</p><h4 id="set-集合" tabindex="-1">Set（集合） <a class="header-anchor" href="#set-集合" aria-label="Permalink to &quot;Set（集合）&quot;">​</a></h4><h6 id="定义与特点" tabindex="-1">定义与特点： <a class="header-anchor" href="#定义与特点" aria-label="Permalink to &quot;定义与特点：&quot;">​</a></h6><p>JavaScript 的 Set 是一种内置对象，它允许你存储任何类型的唯一值，无论是原始值或者是对象引用。Set 中的元素是有序的，且不允许重复。</p><h6 id="基本用法" tabindex="-1">基本用法： <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法：&quot;">​</a></h6><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> mySet </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">mySet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">     </span><span style="color:#676E95;font-style:italic;">// 添加元素</span></span>
<span class="line"><span style="color:#BABED8;">mySet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">some value</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">mySet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">// 删除元素</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(mySet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 检查元素是否存在</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(mySet</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">size)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">   </span><span style="color:#676E95;font-style:italic;">// 获取集合大小</span></span></code></pre></div><h6 id="应用场景" tabindex="-1">应用场景： <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景：&quot;">​</a></h6><p>数据去重：利用 Set 的唯一性快速去除数组中的重复元素。 成员检查：高效地判断一个值是否存在于集合中。 遍历操作：可以使用 for...of 或者 Array.from() 转换为数组后进行操作。</p><h4 id="map-映射" tabindex="-1">Map（映射） <a class="header-anchor" href="#map-映射" aria-label="Permalink to &quot;Map（映射）&quot;">​</a></h4><h6 id="定义与特点-1" tabindex="-1">定义与特点： <a class="header-anchor" href="#定义与特点-1" aria-label="Permalink to &quot;定义与特点：&quot;">​</a></h6><p>Map 是另一种内置对象，它持有键值对的集合。与普通对象不同，Map 的键可以是任意类型，包括对象。Map 也保持了键值对的插入顺序。</p><h6 id="基本用法-1" tabindex="-1">基本用法： <a class="header-anchor" href="#基本用法-1" aria-label="Permalink to &quot;基本用法：&quot;">​</a></h6><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> myMap </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">myMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">key1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">value1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 添加键值对</span></span>
<span class="line"><span style="color:#BABED8;">myMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">key2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">value2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(myMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">key1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 获取值</span></span>
<span class="line"><span style="color:#BABED8;">myMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">key1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">          </span><span style="color:#676E95;font-style:italic;">// 删除键值对</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(myMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">key1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 检查键是否存在</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(myMap</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">size)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">       </span><span style="color:#676E95;font-style:italic;">// 获取映射大小</span></span></code></pre></div><h6 id="应用场景-1" tabindex="-1">应用场景： <a class="header-anchor" href="#应用场景-1" aria-label="Permalink to &quot;应用场景：&quot;">​</a></h6><p>键值对存储：当需要根据非字符串类型的键（如对象）来存储和检索数据时。 复杂数据索引：构建更复杂的数据索引结构。 高效查找与更新：利用键快速定位并修改关联值。 总结 在前端开发中，合理使用 Set 和 Map 能够提升代码的效率和清晰度，特别是在处理集合和映射类型的数据操作时。它们提供了比传统数组和对象更为丰富和灵活的功能，是现代JavaScript开发不可或缺的一部分。</p>`,15),e=[p];function t(c,r,y,D,F,B){return a(),n("div",null,e)}const E=s(o,[["render",t]]);export{A as __pageData,E as default};
